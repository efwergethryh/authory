<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Reset password</title>
    <style>
        body {
            background-color: #EEF2F5;
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        form {
            background-color: white;
            display: flex;
            flex-direction: column;
            width: 50%;
            height: fit-content;
            gap: 1vw;
            border-radius: 10px;
            padding: 2%;
        }

        form button {
            background-color: #047a88;
            color: white;
            border: none;
            width: 50%;
            font-family: Lato, "Apple Symbols", BlinkMacSystemFont, "segoe ui", "avenir next", avenir, "helvetica neue", helvetica, ubuntu, roboto, noto, arial, sans-serif;
            font-size: 14px;
            padding: 16px 0px;
            border-radius: 4px;
            font-weight: bold;
        }

        .navbar {
            margin-left: 16%;
        }

        .navbar img {
            width: 50%;
        }

        .input-group input {
            font-family: Lato, -apple-system, BlinkMacSystemFont, "segoe ui", "avenir next", avenir, "helvetica neue", helvetica, ubuntu, roboto, noto, arial, sans-serif;
            font-size: 16px;
            line-height: 1.5;
            border-radius: 4px;
            border-width: 1px;
            border-style: solid;
            width: 100%;
            padding: 8px 12px;
            box-sizing: border-box;
            color: rgb(26, 28, 28);
            border-color: rgb(163, 178, 189);
            background-color: rgb(255, 255, 255);
        }

        .input-group label,
        form p {
            color: rgb(96, 117, 133);
            font-family: Lato, "Apple Symbols", BlinkMacSystemFont, "segoe ui", "avenir next", avenir, "helvetica neue", helvetica, ubuntu, roboto, noto, arial, sans-serif;
            font-weight: 900;
            margin: 0px;
            overflow-wrap: normal;
            hyphens: none;
            font-size: 12px;
            line-height: 1.33333;
            letter-spacing: 0.5px;
            text-transform: uppercase;
            cursor: pointer;
        }

        .email-sent {
            padding: 1vw;
            background: #047a88;
            color: white;
            border-radius: 10px;
            font-family: Lato, "Apple Symbols", BlinkMacSystemFont, "segoe ui", "avenir next", avenir, "helvetica neue", helvetica, ubuntu, roboto, noto, arial, sans-serif;
        }
        @media only screen and (min-width: 768px) and (max-width: 1024px) {
            form{
                width: 94%;
                height: 30vw;
                gap:8vw;
                font-size: xx-large;
            }
        }
        @media (max-width:425px) {

            form {
                background-color: white;
                display: flex;
                flex-direction: column;
                width: 82%;
                height: 65vw;
                gap: 15vw;
                border-radius: 10px;
                padding: 6%;
            }
        }
    </style>
</head>

<body>
    <div class="navbar">
        <img src="/images/ictoob.png" alt="not found">
    </div>
    <form>
        <p>Reset Your password</p>
        <div class="input-group">
            <label for="name">email</label>
            <input type="email" id="email" name="email" required placeholder="Enter your email">
        </div>
        <button id="send">Send code</button>
    </form>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            document.getElementById('send').addEventListener('click', async function (e) {
                e.preventDefault(); // Prevent default form submission behavior


                try {
                    const email = document.getElementById('email').value; // Correct method name
                    const response = await fetch('/api/resetPassword', {
                        method: "POST",
                        headers: { // Missing 'headers' key
                            "Content-Type": "application/json"
                        },
                        body: JSON.stringify({ email }) // Corrected property access
                    });

                    if (!response.ok) {
                        throw new Error(`HTTP error! status: ${response.status}`);
                    }

                    else {
                        const data = await response.json();
                        console.log('data', data);
                        const successDiv = document.createElement('div')
                        successDiv.className = 'email-sent'
                        successDiv.textContent = data.message
                        const form = document.querySelector('form')
                        form.prepend(successDiv)
                    }
                } catch (error) {
                    console.error('Error:', error);
                }
            });
        });

    </script>
</body>

</html>